@forward "react-contexify/ReactContexify.css";
@forward "variables";
@forward "helpers";
@forward "transitions";


* {
    box-sizing: border-box;
}

:root {
    color-scheme: dark;
}

:focus {
    outline-offset: 1px;
}

body {
    background: var(--color-bg);
    color: var(--color-text);
    margin: 0;
    line-height: 1.5;
    width: 100vw;
    height: 100vh;
    overflow: clip;
    font-family: system-ui, sans-serif;
    accent-color: var(--color-control-active);
    caret-color: var(--color-primary);
}

h1, h2, h3, h4, h5, h6 {
    margin: 0;
}

h2 {
    font-size: 1.25em;
    font-weight: bold;
}

h3 {
    font-size: 1em;
    font-weight: bold;
}

a {
    display: inline-flex;
    gap: var(--spacing-s);

    svg {
        fill: currentColor;
        width: 1rem;
    }
}

button {
    appearance: none;
    border: none;
    padding: 0;
    background: none;
    font: inherit;
    cursor: pointer;
}

.button {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--spacing-s);
    border-radius: var(--border-radius);
    border: none;
    padding: var(--spacing-xs) var(--spacing-m);
    background-color: var(--color-control-bg);
    cursor: pointer;

    svg {
        display: block;
        fill: currentColor;
        width: 1rem;
    }

    &:hover {
        background-color: var(--color-control-hover);
    }

    &:active {
        background-color: var(--color-control-active);
    }

    &--negative {

        &:hover {
            background-color: var(--color-control-negative);
        }
    }

    &--primary {
        background-color: var(--color-primary);
    }

    &--icon {
        padding: var(--spacing-xs);
        aspect-ratio: 1/1;
    }

    &:disabled {
        cursor: not-allowed;
        background-color: var(--color-control-disabled);
    }
}

label, legend {
    padding: 0;
    font-weight: 400;
}

label {
    display: flex;
    flex-direction: column;
    justify-content: end;
    gap: var(--spacing-s);
}

label:has([type="checkbox"], [type="radio"]) {
    flex-direction: row;
    justify-content: start;
}

input, select, textarea {
    font: inherit;

    &:user-invalid {
        outline-color: #cc0000;
    }
}

input[type="text"], input[type="number"], select, textarea {
    --border-width: 2px;

    border: var(--border-width) solid var(--color-input-border);
    border-radius: var(--border-radius);
    padding-inline: calc(var(--spacing-s) - var(--border-width));
    padding-block: calc(var(--spacing-xs) - var(--border-width));
    min-height: 2rem;
    background-color: var(--color-input-bg);
}

input[type="color"] {
    min-height: 2rem;
}

fieldset {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-s);
    margin: 0;
    padding: 0;
    border: none;
}

legend {
    margin-bottom: var(--spacing-s);
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

.contexify {
    border: var(--border-popover);
}

.styling-section {
    display: grid;
    gap: var(--spacing-m);
    padding: var(--spacing-m);
    background-color: var(--color-panel-bg);
}

.control-row {
    display: flex;
    gap: var(--spacing-m);
    flex-wrap: wrap;
    width: 100%
}
